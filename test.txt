Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ git push -u origin main

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ git remote remove origin

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ $ ssh-keygen -t ed
bash: $: command not found

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ $ ssh-keygen -t ed
bash: $: command not found

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ ssh-keygen -t ed25519 -c "example@mail.com"
Too many arguments.
usage: ssh-keygen [-q] [-a rounds] [-b bits] [-C comment] [-f output_keyfile]
                  [-m format] [-N new_passphrase] [-O option]
                  [-t dsa | ecdsa | ecdsa-sk | ed25519 | ed25519-sk | rsa]
                  [-w provider]
       ssh-keygen -p [-a rounds] [-f keyfile] [-m format] [-N new_passphrase]
                   [-P old_passphrase]
       ssh-keygen -i [-f input_keyfile] [-m key_format]
       ssh-keygen -e [-f input_keyfile] [-m key_format]
       ssh-keygen -y [-f input_keyfile]
       ssh-keygen -c [-a rounds] [-C comment] [-f keyfile] [-P passphrase]
       ssh-keygen -l [-v] [-E fingerprint_hash] [-f input_keyfile]
       ssh-keygen -B [-f input_keyfile]
       ssh-keygen -D pkcs11
       ssh-keygen -F hostname [-lv] [-f known_hosts_file]
       ssh-keygen -H [-f known_hosts_file]
       ssh-keygen -K [-a rounds] [-w provider]
       ssh-keygen -R hostname [-f known_hosts_file]
       ssh-keygen -r hostname [-g] [-f input_keyfile]
       ssh-keygen -M generate [-O option] output_file
       ssh-keygen -M screen [-f input_file] [-O option] output_file
       ssh-keygen -I certificate_identity -s ca_key [-hU] [-D pkcs11_provider]
                  [-n principals] [-O option] [-V validity_interval]
                  [-z serial_number] file ...
       ssh-keygen -L [-f input_keyfile]
       ssh-keygen -A [-a rounds] [-f prefix_path]
       ssh-keygen -k -f krl_file [-u] [-s ca_public] [-z version_number]
                  file ...
       ssh-keygen -Q [-l] -f krl_file [file ...]
       ssh-keygen -Y find-principals -s signature_file -f allowed_signers_file
       ssh-keygen -Y check-novalidate -n namespace -s signature_file
       ssh-keygen -Y sign -f key_file -n namespace file ...
       ssh-keygen -Y verify -f allowed_signers_file -I signer_identity
                -n namespace -s signature_file [-r revocation_file]

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ ssh-keygen -t ed25519 -C "jihannabdul@gmail.com"
Generating public/private ed25519 key pair.
Enter file in which to save the key (/c/Users/Lenovo/.ssh/id_ed25519):
Created directory '/c/Users/Lenovo/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/Lenovo/.ssh/id_ed25519
Your public key has been saved in /c/Users/Lenovo/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:WEptsHTlawMTtdgZJlBEXTnImM23ZOcoPhIvbnzpAZc jihannabdul@gmail.com
The key's randomart image is:
+--[ED25519 256]--+
|      +=BX=o..   |
|     . =oB*+* .  |
|      o B =+ *   |
|     . =.o.oo .  |
|      o S+E.     |
|        o++.     |
|       o o.o     |
|        + o.     |
|       . o.      |
+----[SHA256]-----+

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ eval "$(ssh-agent -s)"
Agent pid 1573

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ $ ssh-add ~/.ssh/id_ed25519
bash: $: command not found

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ ssh-add ~/.ssh/id_ed25519
Identity added: /c/Users/Lenovo/.ssh/id_ed25519 (jihannabdul@gmail.com)

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$ clip < ~/.ssh/id_ed25519.pub

Lenovo@DESKTOP-73UIVI1 MINGW64 /d/dibimbing/testgit (main)
$
